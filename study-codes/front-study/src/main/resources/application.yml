server:
  port: 8801
spring:
  thymeleaf:
    cache: false # 修改页面实时生效，不缓存。注意：不用重启，但是要按Ctrl+F9重新编译一下项目才生效

  mvc:
    hiddenmethod:
      filter:
        enabled: true

  application:
    name: front-study                   # 项目名，配置中心读取配置用
  profiles:
    active: test    # 启用哪个环境，注意：这种形式下，不支持加载 application-test.yml，必须写在当前文件里
  kafka:
    bootstrap-servers: 10.1.2.3:9092
  config:
    # 用application.yml代替bootstrap.yml，可以少一个maven依赖，并用spring.config.import来代替原来的spring.cloud.config.uri
    import: optional:configserver:http://localhost:8999
  cloud:
    config:
      # uri: http://localhost:8999       # 指定配置中心url
      #profile: test                      # 指定使用哪个配置
      #label: master                     # 指定分支，可为空，默认取主干

  # 注：以下用于修改kafka topic名称，实际测试，必须放在application.yml里，不能放在bootstrap.yml里，否则无效
    stream:
      bindings:
        springCloudBusInput:
          destination: "newtopicname"  # 修改配置中心刷新用的kafka topic，默认是 springCloudBus
        springCloudBusOutput:
          destination: "newtopicname"  # 修改配置中心刷新用的kafka topic，默认是 springCloudBus

management:
  #server:
  #port: 7777 #不单独设置端口的话，和服务的端口一致
  #servlet:
  #context-path: /boot
  endpoints:
    web:
      exposure:
        include: "prometheus,info,health,refresh"   # 用*表示暴露全部
      #base-path: /    # 访问路径中没有actuator 直接是http://localhost:8080/Prometheus
  metrics:
    export:
      prometheus:
        enabled: true

---
spring:
  config:
    activate:
      on-profile: test
  cloud:
    config:
      profile: ${spring.profiles.active}                  # 对应加载哪个环境的yml
      label: ${spring.profiles.active}                    # 当前环境要读取的git分支名
